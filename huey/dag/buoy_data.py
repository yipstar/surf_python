# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/03_dag.buoy_data.ipynb (unless otherwise specified).

__all__ = ['default_args', 'dag', 'get_all_active_buoy_station_ids', 'run_import_buoy_realtime_wave_detail',
           'import_buoy_realtime_wave_detail_tasks', 'active_station_ids', 'run_import_buoy_raw_spectral_wave_data',
           't2', 'slack_token', 'slack_success_task']

# Cell
from ..imports import *
from .airflow_imports import *

# Cell
default_args = {
    'owner': 'airflow',
    'depends_on_past': False,
    'start_date': datetime(2019, 7, 24),
    'email': ['heyhueyapp@gmail.com'],
    'email_on_failure': True,
    'email_on_retry': True,
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
    # 'queue': 'bash_queue',
    # 'pool': 'backfill',
    # 'priority_weight': 10,
    # 'end_date': datetime(2016, 1, 1),
}

# Cell
# @hourly
dag = DAG(
    'huey_import_buoy_data', \
    default_args=default_args, \
    schedule_interval="0 * * * *", \
    catchup=False
)

# Cell
from ..data.sql import get_db_engine

# Cell
def get_all_active_buoy_station_ids():
    db_engine = get_db_engine()
    df_buoys = pd.read_sql("select * from buoy where data_download_active = 't'", db_engine)
    return df_buoys.station_id

# Cell
from ..data.importer.buoy_data import import_buoy_realtime_wave_detail

# Cell
def run_import_buoy_realtime_wave_detail(station_id):
    import_buoy_realtime_wave_detail(station_id)

# Cell

import_buoy_realtime_wave_detail_tasks = []
active_station_ids = get_all_active_buoy_station_ids()

for station_id in active_station_ids:

    task_id = f"import_buoy_realtime_wave_detail-{station_id}"

    task = PythonOperator(task_id=task_id,
                          python_callable=run_import_buoy_realtime_wave_detail,
                          op_kwargs={'station_id': station_id},
                          dag=dag)

    import_buoy_realtime_wave_detail_tasks.append(task)

# Cell
from ..data.importer.buoy_data import import_buoy_raw_spectral_wave_data

def run_import_buoy_raw_spectral_wave_data():
    station_id = "46025"
    import_buoy_raw_spectral_wave_data(station_id)

# Cell
t2 = PythonOperator(
    task_id='import_buoy_raw_spectral_wave_data',
    python_callable=run_import_buoy_raw_spectral_wave_data,
    dag=dag)

# Cell
slack_token = BaseHook.get_connection('slack').password
slack_success_task = SlackAPIPostOperator(
    task_id='send_slack_success_alert',
    token=slack_token,
    text='Buoy Data Import Success.',
    channel='#huey_data_import',
    username='heyhueyapp',
    dag=dag,
    blocks=[],
    attachments=[]
)

# Cell

import_buoy_realtime_wave_detail_tasks >> slack_success_task